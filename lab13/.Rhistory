select(common.name)
homerange%>%
filter(taxon == "birds")%>%
filter(locomotion != "flying")%>%
pull(common.name)
homerange%>%
filter(taxon != "birds")%>%
filter(locomotion == "flying")%>%
select(common.name)
herbivore_vec <- homerange %>%
filter(trophic.guild == "herbivore")%>%
pull(common.name)
fly_bird_herbi_list <- list(flying_vec, bird_vec, herbivore_vec)
ggVennDiagram(fly_bird_herbi_list, category.names = c("Fly", "Bird", "Herbivore"))
# you can toggle edge size
venn_plot <- ggVennDiagram(fly_or_bird_list, category.names = c("Fly", "Bird"), edge_size = 1.5)
venn_plot +
scale_fill_distiller(palette = "Greys")+ #distiller is for discrete data
labs(title = "Do all birds fly? Do only birds fly?",
caption = ("you can add a caption here, e.g.: Studys show not all birds fly, and not only birds fly")
)
# you can toggle edge size and label (Fly, Bird) colors here
ggVennDiagram(fly_or_bird_list,
set_color = c("black", "blue"),             # sets label colors
category.names = c("Fly", "Bird"),          # sets category label names
label_color = "firebrick",                  # sets overlap-quantity label color
label_size = 4                              # sets overlap-label size
)+
scale_color_brewer(palette = "Set3")+                   # sets palette for circle colors
scale_fill_distiller(palette = "Greys")+                # distiller is for discrete data
labs(title = "Do all birds fly? Do only birds fly?",
caption = ("you can add a caption here, e.g.: Studys show not all birds fly, and not only birds fly") )
#Set Up the vectors:
#you can also recycle the one we made earlier
swimming_vec<- homerange %>%
filter(locomotion=="swimming")%>%
pull(common.name)
carni_vec<- homerange %>%
filter(trophic.guild=="carnivore")%>%
pull(common.name)
aqua_vec <- homerange %>%
filter(realm == "aquatic")%>%
pull(common.name)
ecto_vec<- homerange %>%
filter(thermoregulation =="ectotherm")%>%
pull(common.name)
# Make the list of vectors:
# Make the plot:
swim_aqua_carni_ecto_list <- list(swimming_vec, carni_vec,ecto_vec,aqua_vec)
ggVennDiagram(swim_aqua_carni_ecto_list, category.names = c("swim", "aquatic","carnivore", "ectotherm"))
View(homerange)
homerange%>%
filter(locomotion=="ectotherm"&realm=="aquatic"&trophic.guild=="carnivore"&locomotion=="swimming")%>%
select(common.name)
homerange%>%
filter(locomotion=="ectotherm"&realm=="aquatic"&trophic.guild!="carnivore"&locomotion=="swimming")%>%
select(common.name)
hr_taxon_count <- homerange %>%
count(taxon)
hr_taxon_count
hr_taxon_count %>%
ggplot(aes(
label = taxon,
size = n,
color = taxon
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
hr_class_count<-homerange%>%
filter(class=="reptilia")%>%
count(class)
hr_class_count
View(homerange)
hr_class_count<-homerange%>%
filter(class=="reptilia")%>%
count(family)
hr_class_count
hr_class_count %>%
ggplot(aes(
label = family,
size = n,
color = family
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
hr_class_count %>%
ggplot(aes(
label = family,
size = n,
color = family
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
hr_class_count %>%
ggplot(aes(
label = family,
size = n,
color = family
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_bw()
hr_class_count %>%
ggplot(aes(
label = family,
size = n,
color = family
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_classic()
hr_class_count %>%
ggplot(aes(
label = family,
size = n,
color = family
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_gray()
hr_class_count %>%
ggplot(aes(
label = family,
size = n,
color = family
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 10) +
theme_minimal()
library(tidyverse)
library(janitor)
library("palmerpenguins")
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
superhero_info<-clean_names(superhero_info)
superhero_info<-clean_names(superhero_info)
names(superhero_info)
glimpse(superhero_info)
str(superhero_info)
superhero_info%>%
ggplot(aes(x=alignment,y=weight))+
geom_boxplot()
superhero_info%>%
ggplot(aes(x=alignment,y=weight))+
geom_violin(alpha=0.7)
superhero_info%>%
ggplot(aes(x=alignment,y=weight,fill=alignment))+
geom_violin(alpha=0.7)
superhero_info%>%
ggplot(aes(x=alignment,y=weight,fill=alignment,na.rm=T))+
geom_violin(alpha=0.7)
superhero_info%>%
na_exclude()%>%
ggplot(aes(x=alignment,y=weight,fill=alignment))+
geom_violin(alpha=0.7)
superhero_info%>%
filter(alignment!=NA)
ggplot(aes(x=alignment,y=weight,fill=alignment))+
geom_violin(alpha=0.7)
superhero_info%>%
filter(alignment!=NA)%>%
ggplot(aes(x=alignment,y=weight,fill=alignment))+
geom_violin(alpha=0.7)
superhero_info%>%
filter(weight!=NA)%>%
ggplot(aes(x=alignment,y=weight,fill=alignment))+
geom_violin(alpha=0.7)
superhero_info%>%
filter(alignment!="NA",weight!="NA")%>%
ggplot(aes(x=alignment,y=weight,fill=alignment))+
geom_violin(alpha=0.7)
superhero_info%>%
na.exclude()%>%
ggplot(aes(x=alignment,y=weight))+
geom_boxplot()
superhero_info%>%
filter(alignment!="NA",weight!="NA")%>%
ggplot(aes(x=alignment,y=weight,fill=alignment))+
geom_violin(alpha=0.5)+
geom_boxplot(alpha=0.5)
View(superhero_info)
superhero_info%>%
filter(race!="NA",height!="NA")%>%
ggplot(aes(x=race,y=height))+
geom_violin(alpha=0.6)+
geom_boxplot(alpha=0.4)
superhero_info%>%
filter(race!="NA",height!="NA")%>%
ggplot(aes(x=race,y=height))+
geom_violin(alpha=0.6)+
superhero_info%>%
filter(race!="NA",height!="NA")%>%
ggplot(aes(x=race,y=height))+
geom_violin(alpha=0.6)
superhero_info%>%
filter(race!="NA",height!="NA")%>%
ggplot(aes(x=race,y=height))+
geom_violin(alpha=0.6)+
coord_flip()
superhero_info%>%
filter(race!="NA",height!="NA")%>%
ggplot(aes(x=race,y=height,fill=race))+
geom_violin(alpha=0.6)+
coord_flip()
superhero_info%>%
filter(race!="NA",height!="NA")%>%
ggplot(aes(x=race,y=height,fill=race))+
geom_violin(alpha=0.6)+
coord_flip()+
theme_bw()
View(beachbugs_long)
beachbugs_long
beachbugs_long%>%
ggplot(aes(x=site,y=year,fill=buglevels))+
geom_tile()+
scale_fill_gradient(low = "yellow",high = "red")+
coord_flip()
#makes a new column of the highest buglevel observed at each site
beachbugs_w_max <- beachbugs_long %>%
group_by(site) %>%
mutate(max_buglevel = max(buglevels, na.rm=T)) %>%
arrange(site)
beachbugs_w_max
#makes a new table where the buglevels are normalized to the max_buglevel
beachbugs_normalized <- beachbugs_w_max %>%
group_by(site) %>%
mutate(norm_buglevel = buglevels/max_buglevel) %>%
arrange(site,year) %>%
select(site, year, norm_buglevel)   # you dont have to select(), but I think its a clearer looking table
beachbugs_normalized
beachbugs_normalized%>%
ggplot(aes(x=site,y=year,fill=buglevels))+
geom_tile()+
scale_fill_gradient(low = "yellow",high = "red")+
coord_flip()
beachbugs_normalized%>%
ggplot(aes(x=site,y=year,fill=norm_buglevel))+
geom_tile()+
scale_fill_gradient(low = "yellow",high = "red")+
coord_flip()
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eye_vec<-superhero_info%>%
filter(eye_color=="red")%>%
pull(name)
# male
male_vec<-superhero_info%>%
filter(gender=="male")%>%
pull(name)
# bald
bald_vec<-superhero_info%>%
filter(hair_color=="bald")%>%
pull(name)
questions_list <- list(evil_vec, red_eye_vec, male_vec, bald_vec)
# something like:
ggVennDiagram( questions_list, category.names = c("Bad", "Red Eye", "Male", "Bald"))
superhero_info%>%
filter(alignment=="bad"&eye_color=="red")%>%
select(name)
good_vec<-superhero_info%>%
filter(alignment=="good")%>%
pull(name)
good_vec<-superhero_info%>%
filter(alignment=="good")%>%
pull(name)
human_vec<-superhero_info%>%
filter(race=="human")%>%
pull(name)
hair_vec<-superhero_info%>%
filter(hair_color!="bald")%>%
pull(name)
q11_hero_list<-list(good_vec,human_vec,hair_vec)
q11_hero_list<-list(good_vec,human_vec,hair_vec)
ggVennDiagram(q11_hero_list,category.names = c("Good","Human","Hair"))
q11_hero_list<-list(good_vec,human_vec,hair_vec)
ggVennDiagram(q11_hero_list,set_color=c("yellow","red"),category.names = c("Good","Human","Hair"))
q11_hero_list<-list(good_vec,human_vec,hair_vec)
ggVennDiagram(q11_hero_list,set_color=c("red","blue","green"),category.names = c("Good","Human","Hair"))
q11_hero_list<-list(good_vec,human_vec,hair_vec)
ggVennDiagram(q11_hero_list,set_color=c("red","blue","brown"),category.names = c("Good","Human","Hair"))
q11_hero_list<-list(good_vec,human_vec,hair_vec)
ggVennDiagram(q11_hero_list,set_color=c("red","blue","brown"),category.names = c("Good","Human","Hair"))+
scale_color_brewer(palette = 1)+
scale_color_distiller(palette = "Blue")
q11_hero_list<-list(good_vec,human_vec,hair_vec)
ggVennDiagram(q11_hero_list,set_color=c("red","blue","brown"),category.names = c("Good","Human","Hair"))+
scale_color_distiller(palette = "Blue")
q11_hero_list<-list(good_vec,human_vec,hair_vec)
ggVennDiagram(q11_hero_list,set_color=c("red","blue","brown"),category.names = c("Good","Human","Hair"))
head(superhero_powers)
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
power_frequency%>%
ggplot(aes(label=power,size=n,color=power))+
geom_text_wordcloud()+
geom_text_wordcloud_area(max=10)+
theme_get()
power_frequency%>%
ggplot(aes(label=power,size=n,color=power))+
geom_text_wordcloud()+
geom_text_wordcloud_area(max=10)+
power_frequency%>%
ggplot(aes(label=power,size=n,color=power))+
geom_text_wordcloud()+
geom_text_wordcloud_area(max=10)
power_frequency%>%
ggplot(aes(label=power,size=freq,color=power))+
geom_text_wordcloud()+
geom_text_wordcloud_area(max=8)
power_frequency%>%
ggplot(aes(label=power,size=freq,color=power))+
geom_text_wordcloud()+
geom_text_wordcloud_area(max=3)+
theme_minimal()
power_frequency%>%
ggplot(aes(label=power,size=freq,color=power))+
geom_text_wordcloud()+
geom_text_wordcloud_area(max=1)+
theme_minimal()
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
power_quantity%>%
ggplot(aes(label=hero_names,size=sum_powers,color=hero_names))+
geom_text_wordcloud()+
geom_text_wordcloud_area(max=1)
power_quantity%>%
ggplot(aes(label=hero_names,size=sum_powers,color=hero_names))+
geom_text_wordcloud()+
geom_text_wordcloud_area(max=1)+
theme_minimal()
library(tidyverse)
library(janitor)
library("palmerpenguins")
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
superhero_info<-clean_names(superhero_info)
names(superhero_info)
glimpse(superhero_info)
str(superhero_info)
superhero_info%>%
na.exclude()%>%
ggplot(aes(x=alignment,y=weight))+
geom_boxplot()
superhero_info%>%
filter(alignment!="NA",weight!="NA")%>%
ggplot(aes(x=alignment,y=weight,fill=alignment))+
geom_violin(alpha=0.7)
superhero_info%>%
filter(alignment!="NA",weight!="NA")%>%
ggplot(aes(x=alignment,y=weight,fill=alignment))+
geom_violin(alpha=0.5)+
geom_boxplot(alpha=0.5)
superhero_info%>%
filter(race!="NA",height!="NA")%>%
ggplot(aes(x=race,y=height,fill=race))+
geom_violin(alpha=0.6)+
coord_flip()+
theme_bw()
beachbugs_long
beachbugs_long%>%
ggplot(aes(x=site,y=year,fill=buglevels))+
geom_tile()+
scale_fill_gradient(low = "yellow",high = "red")+
coord_flip()
#makes a new column of the highest buglevel observed at each site
beachbugs_w_max <- beachbugs_long %>%
group_by(site) %>%
mutate(max_buglevel = max(buglevels, na.rm=T)) %>%
arrange(site)
beachbugs_w_max
#makes a new table where the buglevels are normalized to the max_buglevel
beachbugs_normalized <- beachbugs_w_max %>%
group_by(site) %>%
mutate(norm_buglevel = buglevels/max_buglevel) %>%
arrange(site,year) %>%
select(site, year, norm_buglevel)   # you dont have to select(), but I think its a clearer looking table
beachbugs_normalized
beachbugs_normalized%>%
ggplot(aes(x=site,y=year,fill=norm_buglevel))+
geom_tile()+
scale_fill_gradient(low = "yellow",high = "red")+
coord_flip()
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_eye_vec<-superhero_info%>%
filter(eye_color=="red")%>%
pull(name)
# male
male_vec<-superhero_info%>%
filter(gender=="male")%>%
pull(name)
# bald
bald_vec<-superhero_info%>%
filter(hair_color=="bald")%>%
pull(name)
questions_list <- list(evil_vec, red_eye_vec, male_vec, bald_vec)
# something like:
ggVennDiagram( questions_list, category.names = c("Bad", "Red Eye", "Male", "Bald"))
superhero_info%>%
filter(alignment=="bad"&eye_color=="red")%>%
select(name)
#are they good?
good_vec<-superhero_info%>%
filter(alignment=="good")%>%
pull(name)
#are they human?
human_vec<-superhero_info%>%
filter(race=="human")%>%
pull(name)
#do they have hair?
hair_vec<-superhero_info%>%
filter(hair_color!="bald")%>%
pull(name)
q11_hero_list<-list(good_vec,human_vec,hair_vec)
ggVennDiagram(q11_hero_list,set_color=c("red","blue","brown"),category.names = c("Good","Human","Hair"))
head(superhero_powers)
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
power_frequency%>%
ggplot(aes(label=power,size=freq,color=power))+
geom_text_wordcloud()+
geom_text_wordcloud_area(max=1)+
theme_minimal()
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
power_quantity%>%
ggplot(aes(label=hero_names,size=sum_powers,color=hero_names))+
geom_text_wordcloud()+
geom_text_wordcloud_area(max=1)+
theme_minimal()
library(tidyverse)
library(janitor)
library("palmerpenguins")
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
library(tidyverse)
library(janitor)
library("palmerpenguins")
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
beachbugs_long <- readr::read_csv("data/beachbugs_long.csv")
superhero_info<-clean_names(superhero_info)
names(superhero_info)
superhero_info%>%
na.exclude()%>%
ggplot(aes(x=alignment,y=weight))+
geom_boxplot()
superhero_info%>%
filter(alignment!="NA",weight!="NA")%>%
ggplot(aes(x=alignment,y=weight,fill=alignment))+
geom_violin(alpha=0.7)
