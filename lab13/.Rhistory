output$plot<-renderPlot({
uc_admit%>%
filter(academic_yr==input$x,campus==input$y,category==input$z)%>%
ggplot(aes_string(x="ethnicity",y="filtered_count_fr",fill="ethnicity"))+
geom_col(alpha=0.8,color="Black")+
theme_linedraw()+
theme(axis.text.x = element_text(size = rel(1.5),angle = 60))
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box( title = "Select variable",width = 3,
selectInput("x","select year",
choices = c("2010","2011","2012","2013","2014","2015","2016","2017","2018","2019"),
selected = "2010"),
selectInput("y","select campus",
choices = c("Berkeley","Davis","Irvine","Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected = "Berkeley"),
selectInput("z","select admit category",
choices = c("Admits","Enrollees","Applicants"),
selected = "Admits")
),
box(
title = "UC admission Plot",width = 7,
plotOutput("plot",width = "600px",height = "500px")
)
)
)
)
server <- function(input, output) {
output$plot<-renderPlot({
uc_admit%>%
filter(academic_yr==input$x,campus==input$y,category==input$z)%>%
ggplot(aes_string(x="ethnicity",y="filtered_count_fr",fill="ethnicity"))+
geom_col(alpha=0.8,color="Black")+
theme_linedraw()+
theme(axis.text.x = element_text(size = rel(1.5)))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box( title = "Select variable",width = 3,
selectInput("x","select year",
choices = c("2010","2011","2012","2013","2014","2015","2016","2017","2018","2019"),
selected = "2010"),
selectInput("y","select campus",
choices = c("Berkeley","Davis","Irvine","Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected = "Berkeley"),
selectInput("z","select admit category",
choices = c("Admits","Enrollees","Applicants"),
selected = "Admits")
),
box(
title = "UC admission Plot",width = 7,
plotOutput("plot",width = "600px",height = "500px")
)
)
)
)
server <- function(input, output,session) {
output$plot<-renderPlot({
uc_admit%>%
filter(academic_yr==input$x,campus==input$y,category==input$z)%>%
ggplot(aes_string(x="ethnicity",y="filtered_count_fr",fill="ethnicity"))+
geom_col(alpha=0.8,color="Black")+
theme_linedraw()+
theme(axis.text.x = element_text(size = rel(1.5)))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box( title = "Select variable",width = 3,
selectInput("x","select year",
choices = c("2010","2011","2012","2013","2014","2015","2016","2017","2018","2019"),
selected = "2010"),
selectInput("y","select campus",
choices = c("Berkeley","Davis","Irvine","Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected = "Berkeley"),
selectInput("z","select admit category",
choices = c("Admits","Enrollees","Applicants"),
selected = "Admits")
),
box(
title = "UC admission Plot",width = 7,
plotOutput("plot",width = "600px",height = "500px")
)
)
)
)
server <- function(input, output,session) {
output$plot<-renderPlot({
uc_admit%>%
filter(academic_yr==input$x,campus==input$y,category==input$z)%>%
ggplot(aes_string(x="ethnicity",y="filtered_count_fr",fill="ethnicity"))+
geom_col(alpha=0.8,color="Black")+
theme_linedraw()+
theme(axis.text.x = element_text(size = rel(1.5),angle = 60))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box( title = "Select variable",width = 3,
selectInput("x","select year",
choices = c("2010","2011","2012","2013","2014","2015","2016","2017","2018","2019"),
selected = "2010"),
selectInput("y","select campus",
choices = c("Berkeley","Davis","Irvine","Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected = "Berkeley"),
selectInput("z","select admit category",
choices = c("Admits","Enrollees","Applicants"),
selected = "Admits")
),
box(
title = "UC admission Plot",width = 7,
plotOutput("plot",width = "600px",height = "500px")
)
)
)
)
server <- function(input, output,session) {
output$plot<-renderPlot({
uc_admit%>%
filter(academic_yr==input$x,campus==input$y,category==input$z)%>%
ggplot(aes_string(x="ethnicity",y="filtered_count_fr",fill="ethnicity"))+
geom_col(alpha=0.8,color="Black")+
theme_linedraw()+
theme(axis.text.x = element_text(size = rel(0.5),angle = 60))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box( title = "Select variable",width = 3,
selectInput("x","select year",
choices = c("2010","2011","2012","2013","2014","2015","2016","2017","2018","2019"),
selected = "2010"),
selectInput("y","select campus",
choices = c("Berkeley","Davis","Irvine","Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected = "Berkeley"),
selectInput("z","select admit category",
choices = c("Admits","Enrollees","Applicants"),
selected = "Admits")
),
box(
title = "UC admission Plot",width = 7,
plotOutput("plot",width = "600px",height = "500px")
)
)
)
)
server <- function(input, output,session) {
output$plot<-renderPlot({
uc_admit%>%
filter(academic_yr==input$x,campus==input$y,category==input$z)%>%
ggplot(aes_string(x="ethnicity",y="filtered_count_fr",fill="ethnicity"))+
geom_col(alpha=0.8,color="Black")+
theme_linedraw()+
theme(axis.text.x = element_text(hjust = 1,angle = 60))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box( title = "Select variable",width = 3,
selectInput("x","select year",
choices = c("2010","2011","2012","2013","2014","2015","2016","2017","2018","2019"),
selected = "2010"),
selectInput("y","select campus",
choices = c("Berkeley","Davis","Irvine","Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected = "Berkeley"),
selectInput("z","select admit category",
choices = c("Admits","Enrollees","Applicants"),
selected = "Admits")
),
box(
title = "UC admission Plot",width = 7,
plotOutput("plot",width = "600px",height = "500px")
)
)
)
)
server <- function(input, output,session) {
output$plot<-renderPlot({
uc_admit%>%
filter(academic_yr==input$x,campus==input$y,category==input$z)%>%
ggplot(aes_string(x="ethnicity",y="filtered_count_fr",fill="ethnicity"))+
geom_col(alpha=0.8,color="Black")+
theme_linedraw()+
theme(axis.text.x = element_text(hjust = 1,angle = 60))+
labs(x="Ethnicity", y="Flitered Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
View(uc_admit)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box( title = "Select variable",width = 3,
selectInput("x","select ethnicity",
choices = c("International","Unknown","White","Asian","Chicano/Latino","American Indian","African American","All"),
selected = "International"),
selectInput("y","select campus",
choices = c("Berkeley","Davis","Irvine","Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected = "Berkeley"),
selectInput("z","select admit category",
choices = c("Admits","Enrollees","Applicants"),
selected = "Admits")
),
box(
title = "UC admission Plot",width = 7,
plotOutput("plot",width = "600px",height = "500px")
)
)
)
)
server <- function(input, output,session) {
output$plot<-renderPlot({
uc_admit%>%
filter(ethnicity==input$x,campus==input$y,category==input$z)%>%
ggplot(aes_string(x="academic_yr",y="filtered_count_fr"))+
geom_col(alpha=0.8,color="Black")+
theme_linedraw()+
theme(axis.text.x = element_text(hjust = 1,angle = 60))+
labs(x="Academic Year", y="Flitered Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box( title = "Select variable",width = 3,
selectInput("x","select ethnicity",
choices = c("International","Unknown","White","Asian","Chicano/Latino","American Indian","African American","All"),
selected = "International"),
selectInput("y","select campus",
choices = c("Berkeley","Davis","Irvine","Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected = "Berkeley"),
selectInput("z","select admit category",
choices = c("Admits","Enrollees","Applicants"),
selected = "Admits")
),
box(
title = "UC admission Plot",width = 7,
plotOutput("plot",width = "600px",height = "500px")
)
)
)
)
server <- function(input, output,session) {
output$plot<-renderPlot({
uc_admit%>%
filter(ethnicity==input$x,campus==input$y,category==input$z)%>%
ggplot(aes_string(x="academic_yr",y="filtered_count_fr"))+
geom_col(fill="orange",alpha=0.8,color="Black")+
theme_linedraw()+
theme(axis.text.x = element_text(hjust = 1,angle = 60))+
labs(x="Academic Year", y="Flitered Count")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box( title = "Select variable",width = 3,
selectInput("x","select ethnicity",
choices = c("International","Unknown","White","Asian","Chicano/Latino","American Indian","African American","All"),
selected = "International"),
selectInput("y","select campus",
choices = c("Berkeley","Davis","Irvine","Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected = "Berkeley"),
selectInput("z","select admit category",
choices = c("Admits","Enrollees","Applicants"),
selected = "Admits")
),
box(
title = "UC admission Plot",width = 7,
plotOutput("plot",width = "600px",height = "500px")
)
)
)
)
server <- function(input, output,session) {
output$plot<-renderPlot({
uc_admit%>%
filter(ethnicity==input$x&campus==input$y&category==input$z)%>%
ggplot(aes_string(x="academic_yr",y="filtered_count_fr"))+
geom_col(fill="orange",position="dodge",alpha=0.8,color="Black")+
theme_linedraw()+
theme(axis.text.x = element_text(hjust = 1,angle = 60))+
labs(x="Academic Year", y="Enrollment")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Ethinicity Analysis Among UC Campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
radioButtons("y", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"),
selected = "International")
),
box(title= "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
UC_admit %>%
filter(Campus==input$x & Ethnicity==input$y & Category==input$z) %>%
ggplot(aes(x=Academic_Yr, y=FilteredCountFR))+
geom_col(fill="steelblue", position = "dodge", alpha=1, size=4)+
theme_grey(base_size = 18)+
labs(x="Year", y="Enrollment", fill="Fill Variable")+
theme(axis.text.x = element_text(angle = 65, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Ethinicity Analysis Among UC Campuses"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select Campus", choices = c("Davis", "Irvine", "Berkeley", "Irvine", "Los_Angeles", "Merced", "Riverside", "San_Diego", "Santa_Barbara", "Santa_Cruz"),
selected = "Davis"),
selectInput("z", "Select Admit Category", choices = c("Applicants", "Admits", "Enrollees"),
selected = "Applicants"),
radioButtons("y", "Select Ethnicity", choices = c("International", "Unknown", "White", "Asian", "Chicano/Latino", "American Indian", "African American"),
selected = "International")
),
box(title= "UC Admissions", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
uc_admit %>%
filter(Campus==input$x & Ethnicity==input$y & Category==input$z) %>%
ggplot(aes(x=academic_yr, y=filtered_count_fr))+
geom_col(fill="steelblue", position = "dodge", alpha=1, size=4)+
theme_grey(base_size = 18)+
labs(x="Year", y="Enrollment", fill="Fill Variable")+
theme(axis.text.x = element_text(angle = 65, hjust = 1))
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box( title = "Select variable",width = 3,
selectInput("x","select ethnicity",
choices = c("International","Unknown","White","Asian","Chicano/Latino","American Indian","African American","All"),
selected = "International"),
selectInput("y","select campus",
choices = c("Berkeley","Davis","Irvine","Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected = "Berkeley"),
selectInput("z","select admit category",
choices = c("Admits","Enrollees","Applicants"),
selected = "Admits")
),
box(
title = "UC admission Plot",width = 7,
plotOutput("plot",width = "600px",height = "500px")
)
)
)
)
server <- function(input, output,session) {
output$plot<-renderPlot({
uc_admit%>%
filter(ethnicity==input$x&campus==input$y&category==input$z)%>%
ggplot(aes(x="academic_yr",y="filtered_count_fr"))+
geom_col(fill="orange",position="dodge",alpha=0.8,color="Black")+
theme_linedraw(base_size = 18)+
theme(axis.text.x = element_text(hjust = 1,angle = 60))+
labs(x="Academic Year", y="Enrollment")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box( title = "Select variable",width = 3,
selectInput("x","select ethnicity",
choices = c("International","Unknown","White","Asian","Chicano/Latino","American Indian","African American","All"),
selected = "International"),
selectInput("y","select campus",
choices = c("Berkeley","Davis","Irvine","Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected = "Berkeley"),
selectInput("z","select admit category",
choices = c("Admits","Enrollees","Applicants"),
selected = "Admits")
),
box(
title = "UC admission Plot",width = 7,
plotOutput("plot",width = "600px",height = "500px")
)
)
)
)
server <- function(input, output,session) {
output$plot<-renderPlot({
uc_admit%>%
filter(ethnicity==input$x&campus==input$y&category==input$z)%>%
ggplot(aes_string(x="academic_yr",y="filtered_count_fr"))+
geom_col(fill="orange",position="dodge",alpha=0.8,color="Black")+
theme_linedraw(base_size = 18)+
theme(axis.text.x = element_text(hjust = 1,angle = 60))+
labs(x="Academic Year", y="Enrollment")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "UC Admission"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box( title = "Select variable",width = 3,
selectInput("x","select ethnicity",
choices = c("International","Unknown","White","Asian","Chicano/Latino","American Indian","African American","All"),
selected = "International"),
selectInput("y","select campus",
choices = c("Berkeley","Davis","Irvine","Los_Angeles","Merced","Riverside","San_Diego","Santa_Barbara","Santa_Cruz"),
selected = "Berkeley"),
selectInput("z","select admit category",
choices = c("Admits","Enrollees","Applicants"),
selected = "Admits")
),
box(
title = "UC admission Plot",width = 7,
plotOutput("plot",width = "600px",height = "500px")
)
)
)
)
server <- function(input, output,session) {
output$plot<-renderPlot({
uc_admit%>%
filter(ethnicity==input$x&campus==input$y&category==input$z)%>%
ggplot(aes_string(x="academic_yr",y="filtered_count_fr"))+
geom_col(fill="orange",position="dodge",alpha=0.8,color="Black")+
theme_linedraw(base_size = 18)+
theme(axis.text.x = element_text(hjust = 1))+
labs(x="Academic Year", y="Enrollment")
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
library("skiny")
library("tidyverse")
library("skinydashboard")
library("shinydashboard")
uc_admit<-read_csv("data/uc_data/UC_admit.csv")
runApp('HW#2-app.R')
runApp('HW#2-app.R')
runApp('HW#2-app.R')
runApp('HW#2-app.R')
runApp('HW#3-app.R')
